<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
    <CodeSnippet Format="1.0.0">
        <Header>
            <Title>实现Shpae抽象类</Title>
            <Shortcut>geoge </Shortcut>
            <Description></Description>
            <Author>Wu</Author>
            <SnippetTypes>
                <SnippetType>Expansion</SnippetType>
            </SnippetTypes>
        </Header>
        <Snippet>
            <Declarations>
                <Literal>
                    <ID>type</ID>
                    <ToolTip>Property Type</ToolTip>
                    <Default>int</Default>
                </Literal>
              
                <Literal>
                    <ID>property</ID>
                    <ToolTip>Property Name</ToolTip>
                    <Default>MyProperty</Default>
                </Literal>

               <Literal>
                 <ID>Property</ID>
                 <ToolTip>Property Name</ToolTip>
                 <Default>MyProperty</Default>
               </Literal>
              
              <Literal>
                <ID>definity</ID>
                <ToolTip>definity</ToolTip>
                <Default>definity</Default>
              </Literal>
              
                <Literal>
                    <ID>ownerclass</ID>
                    <ToolTip>The owning class of this Property.  Typically the class that it is declared in.</ToolTip>
                    <Default>ownerclass</Default>
                </Literal>
                <Literal>
                    <ID>defaultvalue</ID>
                    <ToolTip>The default value for this property.</ToolTip>
                    <Default>0</Default>
                </Literal>
            </Declarations>
            <Code Language="csharp">
                <![CDATA[
private $type$ $property$;
/// <summary>
/// $definity$
/// </summary>
protected override Geometry DefiningGeometry => GeometryGenerator();
private Geometry GeometryGenerator()
{
    StreamGeometry stream = new StreamGeometry();
    using(StreamGeometryContext geo = stream.Open()) 
    {

    }
    return stream;
}

$end$]]>
            </Code>
        </Snippet>
    </CodeSnippet>
</CodeSnippets>
